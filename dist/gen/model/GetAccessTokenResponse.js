"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GetAccessTokenResponse = void 0;
var _ApiClient = require("../ApiClient");
/*
 * GoPlus Security API Document
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.45
 *
 * Do not edit the class manually.
 *
 */

/**
 * The GetAccessTokenResponse model module.
 * @module model/GetAccessTokenResponse
 * @version 1.0
 */
class GetAccessTokenResponse {
  /**
   * Constructs a new <code>GetAccessTokenResponse</code>.
   * @alias module:model/GetAccessTokenResponse
   * @class
   */
  constructor() {}

  /**
   * Constructs a <code>GetAccessTokenResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetAccessTokenResponse} obj Optional instance to populate.
   * @return {module:model/GetAccessTokenResponse} The populated <code>GetAccessTokenResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GetAccessTokenResponse();
      if (data.hasOwnProperty('access_token')) obj.access_token = _ApiClient.ApiClient.convertToType(data['access_token'], 'String');
      if (data.hasOwnProperty('expires_in')) obj.expires_in = _ApiClient.ApiClient.convertToType(data['expires_in'], 'Number');
    }
    return obj;
  }
}

/**
 * access_token
 * @member {String} access_token
 */
exports.GetAccessTokenResponse = GetAccessTokenResponse;
GetAccessTokenResponse.prototype.access_token = undefined;

/**
 * expires_in
 * @member {Number} expires_in
 */
GetAccessTokenResponse.prototype.expires_in = undefined;