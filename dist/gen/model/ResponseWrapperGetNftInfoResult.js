"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ResponseWrapperGetNftInfoResult = void 0;
var _ApiClient = require("../ApiClient");
var _ResponseWrapperGetNftInfoResultPrivilegedBurn = require("./ResponseWrapperGetNftInfoResultPrivilegedBurn");
var _ResponseWrapperGetNftInfoResultPrivilegedMinting = require("./ResponseWrapperGetNftInfoResultPrivilegedMinting");
var _ResponseWrapperGetNftInfoResultSameNfts = require("./ResponseWrapperGetNftInfoResultSameNfts");
var _ResponseWrapperGetNftInfoResultSelfDestruct = require("./ResponseWrapperGetNftInfoResultSelfDestruct");
var _ResponseWrapperGetNftInfoResultTransferWithoutApproval = require("./ResponseWrapperGetNftInfoResultTransferWithoutApproval");
/*
 * GoPlus Security API Document
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.45
 *
 * Do not edit the class manually.
 *
 */

/**
 * The ResponseWrapperGetNftInfoResult model module.
 * @module model/ResponseWrapperGetNftInfoResult
 * @version 1.0
 */
class ResponseWrapperGetNftInfoResult {
  /**
   * Constructs a new <code>ResponseWrapperGetNftInfoResult</code>.
   * Response result
   * @alias module:model/ResponseWrapperGetNftInfoResult
   * @class
   */
  constructor() {}

  /**
   * Constructs a <code>ResponseWrapperGetNftInfoResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ResponseWrapperGetNftInfoResult} obj Optional instance to populate.
   * @return {module:model/ResponseWrapperGetNftInfoResult} The populated <code>ResponseWrapperGetNftInfoResult</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ResponseWrapperGetNftInfoResult();
      if (data.hasOwnProperty('traded_volume_24h')) obj.traded_volume_24h = _ApiClient.ApiClient.convertToType(data['traded_volume_24h'], 'Number');
      if (data.hasOwnProperty('total_volume')) obj.total_volume = _ApiClient.ApiClient.convertToType(data['total_volume'], 'Number');
      if (data.hasOwnProperty('red_check_mark')) obj.red_check_mark = _ApiClient.ApiClient.convertToType(data['red_check_mark'], 'Number');
      if (data.hasOwnProperty('nft_proxy')) obj.nft_proxy = _ApiClient.ApiClient.convertToType(data['nft_proxy'], 'Number');
      if (data.hasOwnProperty('restricted_approval')) obj.restricted_approval = _ApiClient.ApiClient.convertToType(data['restricted_approval'], 'Number');
      if (data.hasOwnProperty('highest_price')) obj.highest_price = _ApiClient.ApiClient.convertToType(data['highest_price'], 'Number');
      if (data.hasOwnProperty('transfer_without_approval')) obj.transfer_without_approval = _ResponseWrapperGetNftInfoResultTransferWithoutApproval.ResponseWrapperGetNftInfoResultTransferWithoutApproval.constructFromObject(data['transfer_without_approval']);
      if (data.hasOwnProperty('discord_url')) obj.discord_url = _ApiClient.ApiClient.convertToType(data['discord_url'], 'String');
      if (data.hasOwnProperty('nft_open_source')) obj.nft_open_source = _ApiClient.ApiClient.convertToType(data['nft_open_source'], 'Number');
      if (data.hasOwnProperty('privileged_minting')) obj.privileged_minting = _ResponseWrapperGetNftInfoResultPrivilegedMinting.ResponseWrapperGetNftInfoResultPrivilegedMinting.constructFromObject(data['privileged_minting']);
      if (data.hasOwnProperty('nft_owner_number')) obj.nft_owner_number = _ApiClient.ApiClient.convertToType(data['nft_owner_number'], 'Number');
      if (data.hasOwnProperty('trust_list')) obj.trust_list = _ApiClient.ApiClient.convertToType(data['trust_list'], 'Number');
      if (data.hasOwnProperty('token_id')) obj.token_id = _ApiClient.ApiClient.convertToType(data['token_id'], 'String');
      if (data.hasOwnProperty('lowest_price_24h')) obj.lowest_price_24h = _ApiClient.ApiClient.convertToType(data['lowest_price_24h'], 'Number');
      if (data.hasOwnProperty('average_price_24h')) obj.average_price_24h = _ApiClient.ApiClient.convertToType(data['average_price_24h'], 'Number');
      if (data.hasOwnProperty('nft_erc')) obj.nft_erc = _ApiClient.ApiClient.convertToType(data['nft_erc'], 'String');
      if (data.hasOwnProperty('creator_address')) obj.creator_address = _ApiClient.ApiClient.convertToType(data['creator_address'], 'String');
      if (data.hasOwnProperty('medium_url')) obj.medium_url = _ApiClient.ApiClient.convertToType(data['medium_url'], 'String');
      if (data.hasOwnProperty('malicious_nft_contract')) obj.malicious_nft_contract = _ApiClient.ApiClient.convertToType(data['malicious_nft_contract'], 'Number');
      if (data.hasOwnProperty('privileged_burn')) obj.privileged_burn = _ResponseWrapperGetNftInfoResultPrivilegedBurn.ResponseWrapperGetNftInfoResultPrivilegedBurn.constructFromObject(data['privileged_burn']);
      if (data.hasOwnProperty('twitter_url')) obj.twitter_url = _ApiClient.ApiClient.convertToType(data['twitter_url'], 'String');
      if (data.hasOwnProperty('nft_symbol')) obj.nft_symbol = _ApiClient.ApiClient.convertToType(data['nft_symbol'], 'String');
      if (data.hasOwnProperty('nft_description')) obj.nft_description = _ApiClient.ApiClient.convertToType(data['nft_description'], 'String');
      if (data.hasOwnProperty('self_destruct')) obj.self_destruct = _ResponseWrapperGetNftInfoResultSelfDestruct.ResponseWrapperGetNftInfoResultSelfDestruct.constructFromObject(data['self_destruct']);
      if (data.hasOwnProperty('metadata_frozen')) obj.metadata_frozen = _ApiClient.ApiClient.convertToType(data['metadata_frozen'], 'Number');
      if (data.hasOwnProperty('token_owner')) obj.token_owner = _ApiClient.ApiClient.convertToType(data['token_owner'], 'String');
      if (data.hasOwnProperty('nft_verified')) obj.nft_verified = _ApiClient.ApiClient.convertToType(data['nft_verified'], 'Number');
      if (data.hasOwnProperty('same_nfts')) obj.same_nfts = _ApiClient.ApiClient.convertToType(data['same_nfts'], [_ResponseWrapperGetNftInfoResultSameNfts.ResponseWrapperGetNftInfoResultSameNfts]);
      if (data.hasOwnProperty('nft_items')) obj.nft_items = _ApiClient.ApiClient.convertToType(data['nft_items'], 'Number');
      if (data.hasOwnProperty('oversupply_minting')) obj.oversupply_minting = _ApiClient.ApiClient.convertToType(data['oversupply_minting'], 'Number');
      if (data.hasOwnProperty('nft_name')) obj.nft_name = _ApiClient.ApiClient.convertToType(data['nft_name'], 'String');
      if (data.hasOwnProperty('website_url')) obj.website_url = _ApiClient.ApiClient.convertToType(data['website_url'], 'String');
      if (data.hasOwnProperty('github_url')) obj.github_url = _ApiClient.ApiClient.convertToType(data['github_url'], 'String');
      if (data.hasOwnProperty('telegram_url')) obj.telegram_url = _ApiClient.ApiClient.convertToType(data['telegram_url'], 'String');
      if (data.hasOwnProperty('sales_24h')) obj.sales_24h = _ApiClient.ApiClient.convertToType(data['sales_24h'], 'Number');
      if (data.hasOwnProperty('create_block_number')) obj.create_block_number = _ApiClient.ApiClient.convertToType(data['create_block_number'], 'Number');
    }
    return obj;
  }
}

/**
 * It describes the trading volume of the NFT in 24h.
 * @member {Number} traded_volume_24h
 */
exports.ResponseWrapperGetNftInfoResult = ResponseWrapperGetNftInfoResult;
ResponseWrapperGetNftInfoResult.prototype.traded_volume_24h = undefined;

/**
 * It describes the total volume of the NFT.
 * @member {Number} total_volume
 */
ResponseWrapperGetNftInfoResult.prototype.total_volume = undefined;

/**
 * red check mark
 * @member {Number} red_check_mark
 */
ResponseWrapperGetNftInfoResult.prototype.red_check_mark = undefined;

/**
 * It describes whether this NFT contract has a proxy contract.  \"1\" means true;  \"0\" means false;  \"Null\" means unknown.(Notice:(1) When \"is_open_source\": \"0\", it will return \"null\". (2) Most Proxy contracts are accompanied by modifiable implementation contracts, and implementation contracts may contain significant potential risk.)
 * @member {Number} nft_proxy
 */
ResponseWrapperGetNftInfoResult.prototype.nft_proxy = undefined;

/**
 * It describes whether the NFT contract can restrict the approval, resulting in NFT can not be traded on the NFT DEX. \"1\" means true;  \"0\" means false;  \"Null\" means unknown.(Notice:If this risk exists, it means that users will not be able to trade the NFT on the exchange and only privileged users in the whitelist will be able to trade normally.)
 * @member {Number} restricted_approval
 */
ResponseWrapperGetNftInfoResult.prototype.restricted_approval = undefined;

/**
 * It describes the highest price of the NFT.
 * @member {Number} highest_price
 */
ResponseWrapperGetNftInfoResult.prototype.highest_price = undefined;

/**
 * @member {module:model/ResponseWrapperGetNftInfoResultTransferWithoutApproval} transfer_without_approval
 */
ResponseWrapperGetNftInfoResult.prototype.transfer_without_approval = undefined;

/**
 * It describes the discord url of the NFT. Return \"null\" means there is no discord url or didn't find the discord url.
 * @member {String} discord_url
 */
ResponseWrapperGetNftInfoResult.prototype.discord_url = undefined;

/**
 * It describes whether this contract is open source.  \"1\" means true;  \"0\" means false.(Notice:Un-open-sourced contracts may hide various unknown mechanisms and are extremely risky. When the contract is not open source, we will not be able to detect other risk items.)
 * @member {Number} nft_open_source
 */
ResponseWrapperGetNftInfoResult.prototype.nft_open_source = undefined;

/**
 * @member {module:model/ResponseWrapperGetNftInfoResultPrivilegedMinting} privileged_minting
 */
ResponseWrapperGetNftInfoResult.prototype.privileged_minting = undefined;

/**
 * It describes the holders of the NFT.
 * @member {Number} nft_owner_number
 */
ResponseWrapperGetNftInfoResult.prototype.nft_owner_number = undefined;

/**
 * It describes whether the NFT is a famous and trustworthy one. \"1\" means true;  Return \"null\" means no result.(Notice:(1) Only \"trust_list\": \"1\" means it is a famous and trustworthy NFT. (2) Return \"null\" doesn't mean it is risky.Th)
 * @member {Number} trust_list
 */
ResponseWrapperGetNftInfoResult.prototype.trust_list = undefined;

/**
 * token_id
 * @member {String} token_id
 */
ResponseWrapperGetNftInfoResult.prototype.token_id = undefined;

/**
 * It describes the lowest price of the NFT in 24h.
 * @member {Number} lowest_price_24h
 */
ResponseWrapperGetNftInfoResult.prototype.lowest_price_24h = undefined;

/**
 * It describes the average price of the NFT in 24h.
 * @member {Number} average_price_24h
 */
ResponseWrapperGetNftInfoResult.prototype.average_price_24h = undefined;

/**
 * It describes the ERC protocol of the NFT. Example: \"nft_erc\": \"erc721\"
 * @member {String} nft_erc
 */
ResponseWrapperGetNftInfoResult.prototype.nft_erc = undefined;

/**
 * It describes the creator address of the NFT. Example: \"creator_address\": \"0x1ee0af784b96bb55ece98c9b15675726b0da1b6b\"; Return \"null\" means that we didn't find the creator address.
 * @member {String} creator_address
 */
ResponseWrapperGetNftInfoResult.prototype.creator_address = undefined;

/**
 * It describes the medium url of the NFT. Return \"null\" means there is no medium url or didn't find the medium url.
 * @member {String} medium_url
 */
ResponseWrapperGetNftInfoResult.prototype.medium_url = undefined;

/**
 * It describes whether this NFT has performed malicious behaviors. \"1\" means true; \"0\" means false.(Notice:Malicious behaviors include random additions, blacklist abuse, falsified transactions, and other high-risk behaviors. Interacting with NFTs flagged as Malicious may contain a high level of risk)
 * @member {Number} malicious_nft_contract
 */
ResponseWrapperGetNftInfoResult.prototype.malicious_nft_contract = undefined;

/**
 * @member {module:model/ResponseWrapperGetNftInfoResultPrivilegedBurn} privileged_burn
 */
ResponseWrapperGetNftInfoResult.prototype.privileged_burn = undefined;

/**
 * It describes the twitter url of the NFT. Return \"null\" means there is no twitter url or didn't find the twitter url.
 * @member {String} twitter_url
 */
ResponseWrapperGetNftInfoResult.prototype.twitter_url = undefined;

/**
 * nft_symbol
 * @member {String} nft_symbol
 */
ResponseWrapperGetNftInfoResult.prototype.nft_symbol = undefined;

/**
 * It describes the introduction of the NFT. Return \"null\" means there is no description of the NFT.
 * @member {String} nft_description
 */
ResponseWrapperGetNftInfoResult.prototype.nft_description = undefined;

/**
 * @member {module:model/ResponseWrapperGetNftInfoResultSelfDestruct} self_destruct
 */
ResponseWrapperGetNftInfoResult.prototype.self_destruct = undefined;

/**
 * metadata_frozen
 * @member {Number} metadata_frozen
 */
ResponseWrapperGetNftInfoResult.prototype.metadata_frozen = undefined;

/**
 * token_owner
 * @member {String} token_owner
 */
ResponseWrapperGetNftInfoResult.prototype.token_owner = undefined;

/**
 * It describes whether the NFT is verified. \"1\" means that the NFT is verified; \"0\" means that we did not find any information about whether the NFT is verified.
 * @member {Number} nft_verified
 */
ResponseWrapperGetNftInfoResult.prototype.nft_verified = undefined;

/**
 * It describes the info of other NFTs with duplicate name and symbol.
 * @member {Array.<module:model/ResponseWrapperGetNftInfoResultSameNfts>} same_nfts
 */
ResponseWrapperGetNftInfoResult.prototype.same_nfts = undefined;

/**
 * It describes the numbers of the NFT.
 * @member {Number} nft_items
 */
ResponseWrapperGetNftInfoResult.prototype.nft_items = undefined;

/**
 * It describes whether this NFT owner can bypass the maximum amount of minting specified in the contract, and continue to mint NFTs beyond this limit.  \"1\" means true;  \"0\" means false;  \"Null\" means unknown.(Notice:Oversupply minting refers to the existence of a special mint method in the NFT contract - the owner can bypass the maximum amount of minting specified in the contract, and continue to mint NFTs beyond this limit.)
 * @member {Number} oversupply_minting
 */
ResponseWrapperGetNftInfoResult.prototype.oversupply_minting = undefined;

/**
 * nft_name
 * @member {String} nft_name
 */
ResponseWrapperGetNftInfoResult.prototype.nft_name = undefined;

/**
 * It describes the website url of the NFT. Return \"null\" means there is no website url or didn't find the website url.
 * @member {String} website_url
 */
ResponseWrapperGetNftInfoResult.prototype.website_url = undefined;

/**
 * It describes the github url of the NFT. Return \"null\" means there is no github url or didn't find the github url.
 * @member {String} github_url
 */
ResponseWrapperGetNftInfoResult.prototype.github_url = undefined;

/**
 * It describes the telegram url of the NFT. Return \"null\" means there is no telegram url or didn't find the telegram url.
 * @member {String} telegram_url
 */
ResponseWrapperGetNftInfoResult.prototype.telegram_url = undefined;

/**
 * It describes the sales of the NFT in 24h.
 * @member {Number} sales_24h
 */
ResponseWrapperGetNftInfoResult.prototype.sales_24h = undefined;

/**
 * It describes the number of blocks created for the NFT. Return \"null\" means that we didn't find the number of blocks created for the NFT.
 * @member {Number} create_block_number
 */
ResponseWrapperGetNftInfoResult.prototype.create_block_number = undefined;