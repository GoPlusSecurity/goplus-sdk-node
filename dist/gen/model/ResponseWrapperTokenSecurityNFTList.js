"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ResponseWrapperTokenSecurityNFTList = void 0;
var _ApiClient = require("../ApiClient");
/*
 * GoPlus Security API Document
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.45
 *
 * Do not edit the class manually.
 *
 */

/**
 * The ResponseWrapperTokenSecurityNFTList model module.
 * @module model/ResponseWrapperTokenSecurityNFTList
 * @version 1.0
 */
class ResponseWrapperTokenSecurityNFTList {
  /**
   * Constructs a new <code>ResponseWrapperTokenSecurityNFTList</code>.
   * @alias module:model/ResponseWrapperTokenSecurityNFTList
   * @class
   */
  constructor() {}

  /**
   * Constructs a <code>ResponseWrapperTokenSecurityNFTList</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ResponseWrapperTokenSecurityNFTList} obj Optional instance to populate.
   * @return {module:model/ResponseWrapperTokenSecurityNFTList} The populated <code>ResponseWrapperTokenSecurityNFTList</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ResponseWrapperTokenSecurityNFTList();
      if (data.hasOwnProperty('NFT_percentage')) obj.NFT_percentage = _ApiClient.ApiClient.convertToType(data['NFT_percentage'], 'String');
      if (data.hasOwnProperty('NFT_id')) obj.NFT_id = _ApiClient.ApiClient.convertToType(data['NFT_id'], 'String');
      if (data.hasOwnProperty('amount')) obj.amount = _ApiClient.ApiClient.convertToType(data['amount'], 'String');
      if (data.hasOwnProperty('in_effect')) obj.in_effect = _ApiClient.ApiClient.convertToType(data['in_effect'], 'String');
      if (data.hasOwnProperty('value')) obj.value = _ApiClient.ApiClient.convertToType(data['value'], 'String');
    }
    return obj;
  }
}

/**
 * \"NFT_percentage\" represents the proportion of that NFT in the total liquidity. When the LP holder is a lockup address, this information will also appear in the \"locked_detail\" section.
 * @member {String} NFT_percentage
 */
exports.ResponseWrapperTokenSecurityNFTList = ResponseWrapperTokenSecurityNFTList;
ResponseWrapperTokenSecurityNFTList.prototype.NFT_percentage = undefined;

/**
 * \"NFT_id\" is the NFTID corresponding to that NFT. 
 * @member {String} NFT_id
 */
ResponseWrapperTokenSecurityNFTList.prototype.NFT_id = undefined;

/**
 * \"amount\" is the liquidity quantity corresponding to the NFT.
 * @member {String} amount
 */
ResponseWrapperTokenSecurityNFTList.prototype.amount = undefined;

/**
 * \"in_effect\" indicates whether the liquidity corresponding to that NFT is effective at the current price. 
 * @member {String} in_effect
 */
ResponseWrapperTokenSecurityNFTList.prototype.in_effect = undefined;

/**
 * \"value\" is the total USD value corresponding to the NFT.
 * @member {String} value
 */
ResponseWrapperTokenSecurityNFTList.prototype.value = undefined;