/*
 * GoPlus Security API Document
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The AuditInfo model module.
 * @module model/AuditInfo
 * @version 1.0
 */
export class AuditInfo {
  /**
   * Constructs a new <code>AuditInfo</code>.
   * @alias module:model/AuditInfo
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AuditInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AuditInfo} obj Optional instance to populate.
   * @return {module:model/AuditInfo} The populated <code>AuditInfo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AuditInfo();
      if (data.hasOwnProperty('audit_firm'))
        obj.audit_firm = ApiClient.convertToType(data['audit_firm'], 'String');
      if (data.hasOwnProperty('audit_link'))
        obj.audit_link = ApiClient.convertToType(data['audit_link'], 'String');
      if (data.hasOwnProperty('audit_time'))
        obj.audit_time = ApiClient.convertToType(data['audit_time'], 'String');
    }
    return obj;
  }
}

/**
 * It describes the firm that audited the dApp.
 * @member {String} audit_firm
 */
AuditInfo.prototype.audit_firm = undefined;

/**
 * It describes the website link of the audit report.
 * @member {String} audit_link
 */
AuditInfo.prototype.audit_link = undefined;

/**
 * It describes the time shown in the latest audit report.
 * @member {String} audit_time
 */
AuditInfo.prototype.audit_time = undefined;

